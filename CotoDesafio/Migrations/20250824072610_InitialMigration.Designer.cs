// <auto-generated />
using System;
using CotoDesafio.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CotoDesafio.Migrations
{
    [DbContext(typeof(CarSalesDbContext))]
    [Migration("20250824072610_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("CotoDesafio.Domain.CarModel", b =>
                {
                    b.Property<string>("CarModelName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Tax")
                        .HasColumnType("TEXT");

                    b.HasKey("CarModelName");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            CarModelName = "Sedan",
                            Price = 8000m,
                            Tax = 0m
                        },
                        new
                        {
                            CarModelName = "SUV",
                            Price = 9500m,
                            Tax = 0m
                        },
                        new
                        {
                            CarModelName = "OffRoad",
                            Price = 12500m,
                            Tax = 0m
                        },
                        new
                        {
                            CarModelName = "Sport",
                            Price = 18200m,
                            Tax = 7m
                        });
                });

            modelBuilder.Entity("CotoDesafio.Domain.DistributionCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DistributionCenters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Centro Norte"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "Centro Sur"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Name = "Centro Este"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Name = "Centro Oeste"
                        });
                });

            modelBuilder.Entity("CotoDesafio.Domain.Sale", b =>
                {
                    b.Property<string>("CarChassisNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarModelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DistributionCenterId")
                        .HasColumnType("TEXT");

                    b.HasKey("CarChassisNumber");

                    b.HasIndex("CarModelName");

                    b.HasIndex("DistributionCenterId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            CarChassisNumber = "1234ejemplo",
                            CarModelName = "Sedan",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            CarChassisNumber = "1235ejemplo",
                            CarModelName = "Sedan",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            CarChassisNumber = "1236ejemplo",
                            CarModelName = "Sport",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            CarChassisNumber = "1237ejemplo",
                            CarModelName = "OffRoad",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            CarChassisNumber = "1238ejemplo",
                            CarModelName = "SUV",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            CarChassisNumber = "1239ejemplo",
                            CarModelName = "Sedan",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            CarChassisNumber = "1211ejemplo",
                            CarModelName = "Sport",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            CarChassisNumber = "11114ejemplo",
                            CarModelName = "OffRoad",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            CarChassisNumber = "1223334ejemplo",
                            CarModelName = "SUV",
                            Date = new DateTime(205, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistributionCenterId = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("CotoDesafio.Domain.Sale", b =>
                {
                    b.HasOne("CotoDesafio.Domain.CarModel", "CarModel")
                        .WithMany("Sales")
                        .HasForeignKey("CarModelName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CotoDesafio.Domain.DistributionCenter", "DistributionCenter")
                        .WithMany("Sales")
                        .HasForeignKey("DistributionCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("DistributionCenter");
                });

            modelBuilder.Entity("CotoDesafio.Domain.CarModel", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("CotoDesafio.Domain.DistributionCenter", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
